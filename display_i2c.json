[{"id":"d7276cd2.d6f55","type":"tab","label":"pythontest","disabled":false,"info":""},{"id":"a7d4e707.fd8a18","type":"inject","z":"d7276cd2.d6f55","name":"","repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":120,"y":240,"wires":[["97c92fce.dd6f6"]]},{"id":"97c92fce.dd6f6","type":"template","z":"d7276cd2.d6f55","name":"","field":"payload","fieldType":"msg","format":"python","syntax":"plain","template":"import time\n\nwhile True:\n    print(time.ctime())\n    time.sleep(10)\n","output":"str","x":320,"y":240,"wires":[["1273e63.74b5c1a"]]},{"id":"1273e63.74b5c1a","type":"file","z":"d7276cd2.d6f55","name":"","filename":"pythontest.py","appendNewline":false,"createDir":false,"overwriteFile":"true","encoding":"none","x":510,"y":240,"wires":[["14057906.c24237"]]},{"id":"14057906.c24237","type":"exec","z":"d7276cd2.d6f55","command":"python3 pythontest.py","addpay":false,"append":"","useSpawn":"true","timer":"","oldrc":false,"name":"","x":740,"y":240,"wires":[["a33c536c.9900e"],[],[]]},{"id":"a33c536c.9900e","type":"debug","z":"d7276cd2.d6f55","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":970,"y":240,"wires":[]},{"id":"a7c4a892.23b698","type":"inject","z":"d7276cd2.d6f55","name":"","repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":400,"y":420,"wires":[["a44bfb48.7f4998"]]},{"id":"a44bfb48.7f4998","type":"template","z":"d7276cd2.d6f55","name":"","field":"payload","fieldType":"msg","format":"python","syntax":"plain","template":"# _____ _____ _____ __ __ _____ _____ \n#|     |   __|     |  |  |     |     |\n#|  |  |__   |  |  |_   _|  |  |  |  |\n#|_____|_____|_____| |_| |_____|_____|\n#\n# Project Tutorial Url:http://osoyoo.com/?p=1031\n#  \nimport smbus\nimport time\n\n# Define some device parameters\nI2C_ADDR  = 0x27 # I2C device address, if any error, change this address to 0x3f\nLCD_WIDTH = 16   # Maximum characters per line\n\n# Define some device constants\nLCD_CHR = 1 # Mode - Sending data\nLCD_CMD = 0 # Mode - Sending command\n\nLCD_LINE_1 = 0x80 # LCD RAM address for the 1st line\nLCD_LINE_2 = 0xC0 # LCD RAM address for the 2nd line\nLCD_LINE_3 = 0x94 # LCD RAM address for the 3rd line\nLCD_LINE_4 = 0xD4 # LCD RAM address for the 4th line\n\nLCD_BACKLIGHT  = 0x08  # On\n#LCD_BACKLIGHT = 0x00  # Off\n\nENABLE = 0b00000100 # Enable bit\n\n# Timing constants\nE_PULSE = 0.0005\nE_DELAY = 0.0005\n\n#Open I2C interface\n#bus = smbus.SMBus(0)  # Rev 1 Pi uses 0\nbus = smbus.SMBus(1) # Rev 2 Pi uses 1\n\ndef lcd_init():\n  # Initialise display\n  lcd_byte(0x33,LCD_CMD) # 110011 Initialise\n  lcd_byte(0x32,LCD_CMD) # 110010 Initialise\n  lcd_byte(0x06,LCD_CMD) # 000110 Cursor move direction\n  lcd_byte(0x0C,LCD_CMD) # 001100 Display On,Cursor Off, Blink Off \n  lcd_byte(0x28,LCD_CMD) # 101000 Data length, number of lines, font size\n  lcd_byte(0x01,LCD_CMD) # 000001 Clear display\n  time.sleep(E_DELAY)\n\ndef lcd_byte(bits, mode):\n  # Send byte to data pins\n  # bits = the data\n  # mode = 1 for data\n  #        0 for command\n\n  bits_high = mode | (bits & 0xF0) | LCD_BACKLIGHT\n  bits_low = mode | ((bits<<4) & 0xF0) | LCD_BACKLIGHT\n\n  # High bits\n  bus.write_byte(I2C_ADDR, bits_high)\n  lcd_toggle_enable(bits_high)\n\n  # Low bits\n  bus.write_byte(I2C_ADDR, bits_low)\n  lcd_toggle_enable(bits_low)\n\ndef lcd_toggle_enable(bits):\n  # Toggle enable\n  time.sleep(E_DELAY)\n  bus.write_byte(I2C_ADDR, (bits | ENABLE))\n  time.sleep(E_PULSE)\n  bus.write_byte(I2C_ADDR,(bits & ~ENABLE))\n  time.sleep(E_DELAY)\n\ndef lcd_string(message,line):\n  # Send string to display\n\n  message = message.ljust(LCD_WIDTH,\" \")\n\n  lcd_byte(line, LCD_CMD)\n\n  for i in range(LCD_WIDTH):\n    lcd_byte(ord(message[i]),LCD_CHR)\n\ndef main():\n  # Main program block\n\n  # Initialise display\n  lcd_init()\n\n  while True:\n\n    # Send some test\n    lcd_string(\"Hello Sir\",LCD_LINE_1)\n    lcd_string(\"Yes u did it\",LCD_LINE_2)\n\n    time.sleep(3)\n  \n    # Send some more text\n    lcd_string(\"Have a nice Day\",LCD_LINE_1)\n    lcd_string(\"Danilo\",LCD_LINE_2)\n\n    time.sleep(3)\n\nif __name__ == '__main__':\n\n  try:\n    main()\n  except KeyboardInterrupt:\n    pass\n  finally:\n    lcd_byte(0x01, LCD_CMD)\n\n\n\n","output":"str","x":600,"y":420,"wires":[["ab67aa26.988ea8"]]},{"id":"ab67aa26.988ea8","type":"file","z":"d7276cd2.d6f55","name":"","filename":"pythontesta.py","appendNewline":false,"createDir":false,"overwriteFile":"true","encoding":"none","x":800,"y":420,"wires":[["75bf47ba.492f38"]]},{"id":"75bf47ba.492f38","type":"exec","z":"d7276cd2.d6f55","command":"python3 pythontesta.py","addpay":false,"append":"","useSpawn":"true","timer":"","oldrc":false,"name":"","x":1030,"y":420,"wires":[["3fadddc3.ab1072"],[],[]]},{"id":"3fadddc3.ab1072","type":"debug","z":"d7276cd2.d6f55","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1250,"y":420,"wires":[]}]
